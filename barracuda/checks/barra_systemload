check_default_levels["barra_systemload"] = "barra_systemload_default_levels"

factory_settings["barra_systemload_default_levels"] = {
	"systemload" : (75, 90)
}

def inventory_barra_systemload (info):

	# Debug: lets see how the data we get looks like
	#import pprint
	#if info[0]:
	#	pprint.pprint(info[0])
	#	pprint.pprint(len(info[0][0]))
	#return []
	
	inventory = []

	for systemload in info[0]:
		inventory.append( ("Cuda System Load", {}) )

	return inventory



def check_barra_systemload (item, params, info):
	# Debug: lets see how the data we get looks like
	#import pprint
	#if info[0]:
	#	pprint.pprint(info[0])
	#	pprint.pprint(len(info[0][0]))
	#return []

	if len(info) != 1:
		return(3, "UNKNOWN - Invalid output from Agent")

	moduleinfo = {}
	perfdata = []
	severity = "OK"
	rc = 0
	infotext = "System Load"


	# Get warn/crit values
	systemloadparams = params.get("systemload")
	if systemloadparams == None:
		systemloadwarn, systemloadcrit = None, None
	else:
		systemloadwarn, systemloadcrit = systemloadparams

	for systemload in info[0]:
		# compare systemload measurement value against warn, crit thresholds
		if systemloadcrit and systemloadwarn:
			if saveint(systemload[0]) >= systemloadcrit:
				severity = "CRITICAL"
				rc = 2
				infotext += " %s Percent (!!)" % (saveint(systemload[0]))
			elif saveint(systemload[0]) >= systemloadwarn:
				severity = "WARNING"
				rc = 1
				infotext += " %s Percent (!)" % (saveint(systemload[0]))
			else:
				infotext += " %s Percent" % (saveint(systemload[0]))
		else:
			infotext += " %s Percent" % (saveint(systemload[0]))


		perfdata = [ ( "systemload", saveint(systemload[0]), systemloadwarn, systemloadcrit ) ]

		output = severity + " - " + infotext
		return (rc, output, perfdata)
	return (3, "UNKNOWN - item not found in snmp data")

check_info['barra_systemload'] = \
	  (check_barra_systemload, "%s", 1, inventory_barra_systemload)

snmp_info['barra_systemload'] = [ 
	( ".1.3.6.1.4.1.20632.2",[
		13, # "systemLoad"
		]
	),
]

snmp_scan_functions["barra_systemload"] = \
lambda oid: "barracuda" in oid(".1.3.6.1.2.1.1.1.0").lower()

